#!/usr/bin/env bash
set -Eeuo pipefail

# -------------------------
# –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
# -------------------------

# –û–±—ë—Ä—Ç–∫–∞ –Ω–∞–¥ Telegram Bot API (x-www-form-urlencoded), –±–µ–∑ jq
_tg_api() {
  # _tg_api <method> <data_as_x_www_form_urlencoded>
  # –ü–µ—á–∞—Ç–∞–µ—Ç JSON-–æ—Ç–≤–µ—Ç; –∫–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞ curl –ø—Ä–æ–∫–∏–¥—ã–≤–∞–µ—Ç –Ω–∞—Ä—É–∂—É
  local method="$1"; shift || true
  local data="${*:-}"
  curl -fsS -m 20 -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/${method}" \
       -H 'Content-Type: application/x-www-form-urlencoded' \
       --data "$data"
}

# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0, –µ—Å–ª–∏ –≤ stdin –µ—Å—Ç—å "ok": true
_tg_ok() {
  grep -q '"ok":[[:space:]]*true' 2>/dev/null
}

# –î–æ—Å—Ç–∞—ë–º chat.id –∏–∑ JSON getUpdates (–Ω–∞—Ö–æ–¥–∏–º –ª—é–±–æ–π –±–ª–æ–∫ "chat":{"id":...})
_tg_extract_chat_id() {
  grep -oE '"chat"[[:space:]]*:[[:space:]]*\{[[:space:]]*"id"[[:space:]]*:[[:space:]]*-?[0-9]+' \
    | tail -n1 \
    | grep -oE -- '-?[0-9]+' \
    || return 1
}

# –ë–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω–∏–π update_id –∏–∑ JSON
_tg_last_update_id() {
  grep -oE '"update_id"[[:space:]]*:[[:space:]]*[0-9]+' \
    | tail -n1 \
    | grep -oE -- '[0-9]+' \
    || true
}

# –¶–≤–µ—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
info(){ echo -e "\e[32m[INFO]\e[0m $*"; }
warn(){ echo -e "\e[33m[WARN]\e[0m $*"; }
error(){ echo -e "\e[31m[ERROR]\e[0m $*" >&2; }

# ---------------------------------------
# –û–°–ù–û–í–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê TELEGRAM-–£–í–ï–î–û–ú–õ–ï–ù–ò–ô
# ---------------------------------------
setup_reboot_notify_telegram() {
  info "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏‚Ä¶"
  read -rp "–í–∫–ª—é—á–∏—Ç—å Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è? [y/N]: " TG_CHOICE
  [[ "${TG_CHOICE,,}" == "y" ]] || { info "Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–æ–ø—É—â–µ–Ω—ã."; return 0; }

  # 1) –¢–æ–∫–µ–Ω –±–æ—Ç–∞
  read -rp "–£–∫–∞–∂–∏ Telegram BOT TOKEN (–Ω–∞–ø—Ä–∏–º–µ—Ä, 123456:ABC...): " TG_BOT_TOKEN
  if [[ -z "${TG_BOT_TOKEN:-}" ]]; then
    error "BOT TOKEN –ø—É—Å—Ç. –ü—Ä–µ—Ä—ã–≤–∞—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É Telegram."; return 1
  fi

  # 2) –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook
  local wh resp last_id deadline upd_id cid
  wh="$(
    curl -fsS -m 20 "https://api.telegram.org/bot${TG_BOT_TOKEN}/getWebhookInfo" 2>/dev/null || true
  )"
  if echo "$wh" | grep -q '"url"[[:space:]]*:[[:space:]]*"http'; then
    warn "–ü–æ—Ö–æ–∂–µ, —É –±–æ—Ç–∞ –≤–∫–ª—é—á—ë–Ω webhook ‚Äî long polling (getUpdates) –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç."
    read -rp "–û—Ç–∫–ª—é—á–∏—Ç—å webhook –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ (deleteWebhook + drop_pending_updates)? [Y/n]: " ans
    ans="${ans:-Y}"
    if [[ "${ans,,}" != "n" ]]; then
      curl -fsS -m 20 "https://api.telegram.org/bot${TG_BOT_TOKEN}/deleteWebhook?drop_pending_updates=true" >/dev/null || true
      info "Webhook –æ—Ç–∫–ª—é—á—ë–Ω –∏ –æ—á–µ—Ä–µ–¥—å –æ—á–∏—â–µ–Ω–∞."
    else
      warn "–û—Å—Ç–∞–≤–∏–ª–∏ webhook –≤–∫–ª—é—á—ë–Ω–Ω—ã–º ‚Äî –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ chat_id –º–æ–∂–µ—Ç –Ω–µ —Å—Ä–∞–±–æ—Ç–∞—Ç—å."
    fi
  fi

  # 3) chat_id: –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ getUpdates —Å –æ—á–∏—Å—Ç–∫–æ–π –æ—á–µ—Ä–µ–¥–∏ –∏ –¥–ª–∏–Ω–Ω—ã–º –æ–ø—Ä–æ—Å–æ–º
  warn "–ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ chat_id: –æ—Ç–∫—Ä–æ–π Telegram –∏ –Ω–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É (–Ω–∞–ø—Ä–∏–º–µ—Ä /start). –ñ–¥—É –¥–æ 60 —Å–µ–∫—É–Ω–¥‚Ä¶"

  resp="$(_tg_api "getUpdates" "timeout=0")" || resp=""

  # –ï—Å–ª–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤ –æ—Ç–≤–µ—Ç–µ –µ—Å—Ç—å chat_id ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
  if cid="$(_tg_extract_chat_id <<<"$resp")"; then
    TG_CHAT_ID="$cid"
    info "–ù–∞–π–¥–µ–Ω chat_id –∏–∑ —Ç–µ–∫—É—â–∏—Ö –∞–ø–¥–µ–π—Ç–æ–≤: ${TG_CHAT_ID}"
  else
    # –û—á–∏—Å—Ç–∏–º —Å—Ç–∞—Ä—ã–µ –∞–ø–¥–µ–π—Ç—ã, —á—Ç–æ–±—ã –∂–¥–∞—Ç—å –¢–û–õ–¨–ö–û –Ω–æ–≤—ã–µ
    last_id="$(_tg_last_update_id <<<"$resp")"
    if [[ -n "$last_id" ]]; then
      _tg_api "getUpdates" "offset=$((last_id+1))&timeout=0" >/dev/null 2>&1 || true
    fi

    # –î–ª–∏–Ω–Ω—ã–π –æ–ø—Ä–æ—Å: –¥–æ 60 —Å–µ–∫
    deadline=$((SECONDS + 60))
    while (( SECONDS < deadline )); do
      resp="$(_tg_api "getUpdates" "timeout=15")" || resp=""
      if echo "$resp" | _tg_ok; then
        if cid="$(_tg_extract_chat_id <<<"$resp")"; then
          TG_CHAT_ID="$cid"
          info "–û–ø—Ä–µ–¥–µ–ª—ë–Ω chat_id: ${TG_CHAT_ID}"
          # –°–¥–≤–∏–Ω–µ–º offset, —á—Ç–æ–±—ã –Ω–µ –∫—Ä—É—Ç–∏—Ç—å—Å—è –Ω–∞ –æ–¥–Ω–∏—Ö –∏ —Ç–µ—Ö –∂–µ –∞–ø–¥–µ–π—Ç–∞—Ö
          upd_id="$(_tg_last_update_id <<<"$resp")"
          [[ -n "$upd_id" ]] && _tg_api "getUpdates" "offset=$((upd_id+1))&timeout=0" >/dev/null 2>&1 || true
          break
        fi
        upd_id="$(_tg_last_update_id <<<"$resp")"
        [[ -n "$upd_id" ]] && _tg_api "getUpdates" "offset=$((upd_id+1))&timeout=0" >/dev/null 2>&1 || true
      fi
    done
  fi

  # 4) –ï—Å–ª–∏ –≤—Å—ë –µ—â—ë –ø—É—Å—Ç–æ ‚Äî –¥–∞—ë–º —à–∞–Ω—Å –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º –∏ –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë 30—Å
  if [[ -z "${TG_CHAT_ID:-}" ]]; then
    warn "–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–π—Ç–∏ chat_id."
    echo "–ú–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ chat_id –≤—Ä—É—á–Ω—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, 874949157 –∏–ª–∏ -100xxxxxxxxxx)."
    read -rp "chat_id (–∏–ª–∏ –æ—Å—Ç–∞–≤—å –ø—É—Å—Ç—ã–º ‚Äî –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ–¥–æ–∂–¥–∞—Ç—å 30—Å): " TG_CHAT_ID
    if [[ -z "${TG_CHAT_ID:-}" ]]; then
      warn "–û–∫, –µ—â—ë 30 —Å–µ–∫—É–Ω–¥ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É‚Ä¶ –ù–∞–ø–∏—à–∏ –µ–º—É —Å–µ–π—á–∞—Å."
      deadline=$((SECONDS + 30))
      while (( SECONDS < deadline )); do
        resp="$(_tg_api "getUpdates" "timeout=10")" || resp=""
        if echo "$resp" | _tg_ok; then
          if cid="$(_tg_extract_chat_id <<<"$resp")"; then
            TG_CHAT_ID="$cid"
            info "–û–ø—Ä–µ–¥–µ–ª—ë–Ω chat_id: ${TG_CHAT_ID}"
            upd_id="$(_tg_last_update_id <<<"$resp")"
            [[ -n "$upd_id" ]] && _tg_api "getUpdates" "offset=$((upd_id+1))&timeout=0" >/dev/null 2>&1 || true
            break
          fi
        fi
      done
    fi
  fi

  if [[ -z "${TG_CHAT_ID:-}" ]]; then
    error "chat_id –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É –ø—É—Å—Ç. –ü—Ä–µ—Ä—ã–≤–∞—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É Telegram."
    return 1
  fi

  # 5) –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥
  cat >/etc/secure-bootstrap.conf <<EOF
TG_BOT_TOKEN='${TG_BOT_TOKEN}'
TG_CHAT_ID='${TG_CHAT_ID}'
EOF
  chmod 600 /etc/secure-bootstrap.conf

  # 6) –£—Ç–∏–ª–∏—Ç–∞ tg-send –¥–ª—è —Ä—É—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
  cat >/usr/local/sbin/tg-send <<'EOT'
#!/usr/bin/env bash
set -Eeuo pipefail
source /etc/secure-bootstrap.conf
TEXT="${*:-üîé test}"
curl -fsS -m 20 -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
     -H 'Content-Type: application/x-www-form-urlencoded' \
     --data-urlencode "chat_id=${TG_CHAT_ID}" \
     --data-urlencode "text=${TEXT}"
EOT
  chmod +x /usr/local/sbin/tg-send

  # 7) –°–∫—Ä–∏–ø—Ç: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
  cat >/usr/local/sbin/reboot-notify-telegram <<'EOS'
#!/usr/bin/env bash
set -Eeuo pipefail
source /etc/secure-bootstrap.conf
STAMP_DIR=/var/lib/reboot-notify-telegram
mkdir -p "$STAMP_DIR"

if [[ -f /var/run/reboot-required ]]; then
  HOST=$(hostname -f 2>/dev/null || hostname)
  PKG_COUNT=$(wc -l </var/run/reboot-required.pkgs 2>/dev/null || echo 0)
  TEXT="‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä ${HOST}: —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π. –ü–∞–∫–µ—Ç–æ–≤: ${PKG_COUNT}.
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞: sudo reboot (–≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è)."
  curl -fsS -m 20 -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
       -H 'Content-Type: application/x-www-form-urlencoded' \
       --data-urlencode "chat_id=${TG_CHAT_ID}" \
       --data-urlencode "text=${TEXT}" >/dev/null || true
fi
EOS
  chmod +x /usr/local/sbin/reboot-notify-telegram

  # 8) systemd units (watcher –Ω–∞ /var/run/reboot-required)
  cat >/etc/systemd/system/reboot-notify.service <<'EOS'
[Unit]
Description=Notify via Telegram when reboot is required

[Service]
Type=oneshot
ExecStart=/usr/local/sbin/reboot-notify-telegram
EOS

  cat >/etc/systemd/system/reboot-notify.path <<'EOS'
[Unit]
Description=Watch /var/run/reboot-required and trigger telegram notify

[Path]
PathExists=/var/run/reboot-required

[Install]
WantedBy=multi-user.target
EOS

  systemctl daemon-reload
  systemctl enable --now reboot-notify.path

  # 9) –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–≤—Å–µ–≥–¥–∞ URL-–∫–æ–¥–∏—Ä—É–µ–º –ø–æ–ª—è)
  local host msg resp_test
  host="$(hostname -f 2>/dev/null || hostname)"
  msg="‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –±–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –Ω–∞ ${host} ($(date -u +'%Y-%m-%d %H:%M:%S UTC'))"

  resp_test="$(
    curl -fsS -m 20 -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
      -H 'Content-Type: application/x-www-form-urlencoded' \
      --data-urlencode "chat_id=${TG_CHAT_ID}" \
      --data-urlencode "text=${msg}"
  )" || resp_test=""

  if echo "$resp_test" | _tg_ok; then
    info "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram (chat_id=${TG_CHAT_ID}). –ü—Ä–æ–≤–µ—Ä—å —á–∞—Ç."
    install -d -m 755 /var/lib/reboot-notify-telegram
    : > /var/lib/reboot-notify-telegram/verified
  else
    warn "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –û—Ç–≤–µ—Ç API:"
    echo "$resp_test" | sed -n '1,200p'
    warn "–ü—Ä–æ–≤–µ—Ä—å BOT TOKEN –∏ chat_id. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É."
  fi
}

# –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞—é—Ç –Ω–∞–ø—Ä—è–º—É—é ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
if [[ "${BASH_SOURCE[0]}" == "$0" ]]; then
  setup_reboot_notify_telegram
fi
