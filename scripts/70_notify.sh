#!/usr/bin/env bash
set -Eeuo pipefail

# -------------------------
# –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
# -------------------------

# –û–±—ë—Ä—Ç–∫–∞ –Ω–∞–¥ Telegram Bot API (x-www-form-urlencoded), –±–µ–∑ jq
_tg_api() {
  local method="$1"; shift || true
  local data="${*:-}"
  curl -fsS -m 20 -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/${method}" \
       -H 'Content-Type: application/x-www-form-urlencoded' \
       --data "$data"
}

# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0, –µ—Å–ª–∏ –≤ stdin –µ—Å—Ç—å "ok": true
_tg_ok() {
  grep -q '"ok":[[:space:]]*true' 2>/dev/null
}

# –î–æ—Å—Ç–∞—ë–º chat.id –∏–∑ JSON getUpdates
_tg_extract_chat_id() {
  grep -oE '"(message|edited_message|channel_post|my_chat_member)"[[:space:]]*:[[:space:]]*\{[^}]*"chat"[[:space:]]*:[[:space:]]*\{[[:space:]]*"id"[[:space:]]*:[[:space:]]*-?[0-9]+' \
    | tail -n1 \
    | grep -oE -- '-?[0-9]+' \
    || return 1
}

# –ë–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω–∏–π update_id –∏–∑ JSON
_tg_last_update_id() {
  grep -oE '"update_id"[[:space:]]*:[[:space:]]*[0-9]+' \
    | tail -n1 \
    | grep -oE -- '[0-9]+' \
    || true
}

# –¶–≤–µ—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
info(){ echo -e "\e[32m[INFO]\e[0m $*"; }
warn(){ echo -e "\e[33m[WARN]\e[0m $*"; }
error(){ echo -e "\e[31m[ERROR]\e[0m $*" >&2; }

# ---------------------------------------
# –û–°–ù–û–í–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê TELEGRAM-–£–í–ï–î–û–ú–õ–ï–ù–ò–ô
# ---------------------------------------
setup_reboot_notify_telegram() {
  info "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏‚Ä¶"
  read -rp "–í–∫–ª—é—á–∏—Ç—å Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è? [y/N]: " TG_CHOICE
  [[ "${TG_CHOICE,,}" == "y" ]] || { info "Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–æ–ø—É—â–µ–Ω—ã."; return 0; }

  # 1) –¢–æ–∫–µ–Ω –±–æ—Ç–∞
  read -rp "–£–∫–∞–∂–∏ Telegram BOT TOKEN (–Ω–∞–ø—Ä–∏–º–µ—Ä, 123456:ABC...): " TG_BOT_TOKEN
  if [[ -z "${TG_BOT_TOKEN:-}" ]]; then
    error "BOT TOKEN –ø—É—Å—Ç. –ü—Ä–µ—Ä—ã–≤–∞—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É Telegram."; return 1
  fi

  # 2) –ü–æ–ø—Ä–æ–±—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å chat_id
  local resp
  resp="$(_tg_api "getUpdates" "timeout=0")" || resp=""
  TG_CHAT_ID="$(_tg_extract_chat_id <<<"$resp" || true)"

  if [[ -n "${TG_CHAT_ID:-}" ]]; then
    info "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω chat_id: ${TG_CHAT_ID}"
  else
    warn "–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–π—Ç–∏ chat_id. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –Ω–∞–ø–∏—Å–∞–ª –±–æ—Ç—É —Å–æ–æ–±—â–µ–Ω–∏–µ."
    echo "–£–∫–∞–∂–∏ chat_id (–Ω–∞–ø—Ä–∏–º–µ—Ä, 123456789 –∏–ª–∏ -100xxxxxxxxxx)."
    read -rp "chat_id: " TG_CHAT_ID
    [[ -n "${TG_CHAT_ID:-}" ]] || { error "chat_id –ø—É—Å—Ç. –ü—Ä–µ—Ä—ã–≤–∞—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É."; return 1; }
  fi

  # 3) –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥
  cat >/etc/secure-bootstrap.conf <<EOF
TG_BOT_TOKEN='${TG_BOT_TOKEN}'
TG_CHAT_ID='${TG_CHAT_ID}'
EOF
  chmod 600 /etc/secure-bootstrap.conf

  # 4) –£—Ç–∏–ª–∏—Ç–∞ tg-send –¥–ª—è —Ä—É—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
  cat >/usr/local/sbin/tg-send <<'EOT'
#!/usr/bin/env bash
set -Eeuo pipefail
source /etc/secure-bootstrap.conf
TEXT="${*:-üîé test}"
curl -fsS -m 20 -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
     -H 'Content-Type: application/x-www-form-urlencoded' \
     --data-urlencode "chat_id=${TG_CHAT_ID}" \
     --data-urlencode "text=${TEXT}"
EOT
  chmod +x /usr/local/sbin/tg-send

  # 5) –°–∫—Ä–∏–ø—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
  cat >/usr/local/sbin/reboot-notify-telegram <<'EOS'
#!/usr/bin/env bash
set -Eeuo pipefail
source /etc/secure-bootstrap.conf
STAMP_DIR=/var/lib/reboot-notify-telegram
mkdir -p "$STAMP_DIR"

if [[ -f /var/run/reboot-required ]]; then
  HOST=$(hostname -f 2>/dev/null || hostname)
  PKG_COUNT=$(wc -l </var/run/reboot-required.pkgs 2>/dev/null || echo 0)
  TEXT="‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä ${HOST}: —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π. –ü–∞–∫–µ—Ç–æ–≤: ${PKG_COUNT}.
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞: sudo reboot (–≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è)."
  curl -fsS -m 20 -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
       -H 'Content-Type: application/x-www-form-urlencoded' \
       --data-urlencode "chat_id=${TG_CHAT_ID}" \
       --data-urlencode "text=${TEXT}" >/dev/null || true
fi
EOS
  chmod +x /usr/local/sbin/reboot-notify-telegram

  # 6) systemd units
  cat >/etc/systemd/system/reboot-notify.service <<'EOS'
[Unit]
Description=Notify via Telegram when reboot is required

[Service]
Type=oneshot
ExecStart=/usr/local/sbin/reboot-notify-telegram
EOS

  cat >/etc/systemd/system/reboot-notify.path <<'EOS'
[Unit]
Description=Watch /var/run/reboot-required and trigger telegram notify

[Path]
PathExists=/var/run/reboot-required

[Install]
WantedBy=multi-user.target
EOS

  systemctl daemon-reload
  systemctl enable --now reboot-notify.path

  # 7) –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  local host msg resp2
  host="$(hostname -f 2>/dev/null || hostname)"
  msg="‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –±–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –Ω–∞ ${host} ($(date -u +'%Y-%m-%d %H:%M:%S UTC'))"

  resp2="$(
    curl -fsS -m 20 -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
      -H 'Content-Type: application/x-www-form-urlencoded' \
      --data-urlencode "chat_id=${TG_CHAT_ID}" \
      --data-urlencode "text=${msg}"
  )" || resp2=""

  if echo "$resp2" | _tg_ok; then
    info "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram (chat_id=${TG_CHAT_ID}). –ü—Ä–æ–≤–µ—Ä—å —á–∞—Ç."
    install -d -m 755 /var/lib/reboot-notify-telegram
    : > /var/lib/reboot-notify-telegram/verified
  else
    warn "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –û—Ç–≤–µ—Ç API:"
    echo "$resp2" | sed -n '1,200p'
    warn "–ü—Ä–æ–≤–µ—Ä—å BOT TOKEN –∏ chat_id."
  fi
}

if [[ "${BASH_SOURCE[0]}" == "$0" ]]; then
  setup_reboot_notify_telegram
fi
